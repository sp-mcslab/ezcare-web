generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CallRecord {
  id           String    @db.VarChar(100)
  userid       String    @db.VarChar(100)
  roomid       String    @db.VarChar(100)
  joinat       DateTime  @db.Timestamptz(6)
  exitat       DateTime? @db.Timestamptz(6)
  hospitalcode String    @db.VarChar(100)
  Room         Room      @relation(fields: [roomid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Room_TO_CallRecord_1")

  @@id([id, userid, roomid], map: "PK_CALLRECORD")
}

model Hospital {
  code         String         @id(map: "PK_HOSPITAL") @db.VarChar(100)
}

model Host {
  roomid       String   @db.VarChar(100)
  userid       String   @db.VarChar(100)
  hospitalcode String   @db.VarChar(100)
  Room         Room     @relation(fields: [roomid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Room_TO_Host_1")

  @@id([roomid, userid], map: "PK_HOST")
}

model Invite {
  userid       String   @db.VarChar(100)
  roomid       String   @db.VarChar(100)
  hospitalcode String
  Room         Room     @relation(fields: [roomid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Room_TO_Invite_1")

  @@id([userid, roomid], map: "PK_INVITE")
}

model OperationLog {
  id                                String      @db.VarChar(100)
  roomid                            String      @db.VarChar(100)
  operator                          String      @db.VarChar(100)
  recipient                         String      @db.VarChar(100)
  transaction                       Transaction
  time                              DateTime    @db.Timestamptz(6)
  success                           Boolean     @db.Boolean
  hospitalcode                      String      @db.VarChar(100)
  Room                              Room        @relation(fields: [roomid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Room_TO_OperationLog_1")

  @@id([id, roomid, operator, recipient], map: "PK_OPERATIONLOG")
}

model Room {
  id           String         @id(map: "PK_ROOM") @db.VarChar(100)
  creatorid    String         @db.VarChar(100)
  name         String         @db.VarChar(100)
  createdat    DateTime       @db.Timestamptz(6)
  openat       DateTime       @db.Timestamptz(6)
  deletedat    DateTime?      @db.Timestamptz(6)
  hospitalcode String         @db.VarChar(100)
  flag         RoomFlag       @default(CLOSED)
  CallRecord   CallRecord[]
  Host         Host[]
  Invite       Invite[]
  OperationLog OperationLog[]
}

enum RoomFlag {
  CLOSED
  OPENED
  SCHEDULED
}

enum Transaction {
  M0
  M1
  V0
  V1
}

